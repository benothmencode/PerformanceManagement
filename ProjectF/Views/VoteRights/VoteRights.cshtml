@model ProjectF.ViewModels.VoteRightsViewModel
@using Microsoft.AspNetCore.Identity
@using PerformanceManagement.ENTITIES

@inject SignInManager<User> SignInManager
@inject UserManager<User> UserManager

@{
    ViewData["Title"] = "Index";
    var userConnected = await UserManager.GetUserAsync(User);
}



@section head{
    <style>
        .scrollable-menu {
            height: auto;
            max-height: 200px;
            overflow-x: hidden;
        }
    </style>
}
<!-- Content Wrapper. Contains page content -->
<div class="content-wrapper">
    <!-- Content Header (Page header) -->
    <section class="content-header">
        <div class="container-fluid">
            <div class="row mb-2">


            </div>
        </div><!-- /.container-fluid -->
    </section>
    <!-- Main content -->
    <section class="content">

        <div class="content">
            <div class="container-fluid">
                <div class="row">
                    <div id="divid" class="card-body">
                        <h2> Votes </h2>
                        <hr>
                        <table class="table table-striped projects" id="list">
                            <thead>
                            <th style="width:20%">
                                Votes
                            </th>
                            <th>
                                Quantity
                            </th>
                            <th>
                                Offer To
                            </th>
                            </thead >
                            <tbody>
                                @foreach (var item in Model.VoteRightsDtos)
                                {
                                    <tr>
                                        <td> @item.TypeVote.Libellé </td>
                                        <td>
                                            @item.Quantity
                                        </td>
                                        <td>

                                            <div class="btn-group dropright">
                                                <button type="button" class="badge badge-warning dropdown-toggle" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                                                    Offer
                                                </button>
                                                <div class="dropdown-menu dropdown-menu-lg scrollable-menu">
                                                    <span class="dropdown-item dropdown-header"> List of Employees To choose from</span>
                                                    <input type="search" class="search" placeholder="search employee" style='width:auto' />
                                                    <ul class="users-list clearfix list1">
                                                        @foreach (var iitem in Model.UsersDtos)
                                                        {
                                                            <li class="loop">
                                                                <img src="~/theme/dist/img/@iitem.Userimage" alt="User Image">
                                                                <input type="button" onclick="PassingData(@iitem.Id,@item.Id,@item.UserId)" class="text-dark" style="border:none; background-color:transparent" value="@iitem.Username" />
                                                            </li>
                                                        }
                                                    </ul>
                                                </div>
                                            </div>
                                        </td>
                                    </tr>
                                }
                            </tbody>
                        </table>
                    </div>
                </div>





                <div id="details">
                    <!-- mustachejs output goas here -->
                </div>
                <!-- Vote Cards -->
                <!-- Awards Cards -->
                <hr>
            </div>
        </div>
        <!-- /.content-wrapper -->
        <!-- Control Sidebar -->
        <aside class="control-sidebar control-sidebar-dark">
            <!-- Control sidebar content goes here -->
        </aside>
        <!-- /.control-sidebar -->
    </section>
</div>
<!-- ./wrapper -->
<script id="DetailTemplate" type="text/mustache">
    <div class="card-body">
        <h2> Awards </h2>
        <hr>
        <table class="table table-striped projects">
            <thead>
            <th style="width: 20%">
                Votes
            </th>
            <th>
                Given to
            </th>

            <th> Offered in </th>
            </thead >
            <tbody>
                {{#Vlist}}
                <tr>
                    {{#typeVote}}
                    <td>{{libellé}}</td>
                    {{/typeVote}}
                    {{#userChosen}}
                    <td>
                        <figure class="figure">
                            <a asp-action="Profile" asp-controller="Users" asp-route-idUser="@UserManager.GetUserId(User)">
                                <img alt="Avatar" class="table-avatar" src="/theme/dist/img/{{{userimage}}}" />
                            </a>
                            <figcaption class="figure-caption text-center">{{userName}}</figcaption>
                        </figure>
                    </td>
                    {{/userChosen}}
                    <td>{{dateOfVote}}</td>
                </tr>
                {{/Vlist}}
            </tbody>
        </table><br />
    </div>
</script>

@section scripts {

    <script src="~/Scripts/mustache.js"></script>
    <script type="text/javascript">
        function PassingData(Id1, Id2, Id3) {
            $.ajax({
                url: "/VoteRights/VoteRegistration",
                type: "GET",
                dataType: "json",
                data: { idUserChosen: Id1, idVote: Id2, UserId: Id3 },
                success: function (data) {
                    if (data.success) {
                        $("#divid").load(" #divid");
                        var html = Mustache.to_html($("#DetailTemplate").html(), { Vlist: data.responseText });
                        $("#details").html(html);
                    }
                     else {
                        alert(data.responseText);
                    }
                },
                error: function (xhr, status, error) {
                    alert(xhr.responseText);
                    alert(status);
                    alert(error);
                }
            });
        }

    </script>
    <script>

        $(".search").on("keyup", function () {
            var datasearch = $(this).val().toLowerCase();
            $("tr ul.list1").each(function () {
                $(this).children("li.loop").each(function (j) {
                    var stringdata = $(this).find('input.text-dark:button').attr('value').toLowerCase();
                    if (stringdata.indexOf(datasearch) !== 0 && stringdata.indexOf(datasearch) < 0) {
                        $(this).hide();
                    }
                    else {
                        $(this).show();
                    }
                });
            });
        });
    </script>
}
